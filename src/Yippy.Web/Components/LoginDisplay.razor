@using System.Security.Claims
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime Js

<div class="login-display">
    <AuthorizeView>
        <Authorized>
            <div class="user-menu">
                <button class="user-button" @onclick="ToggleUserDropdown">
                    <div class="user-avatar">
                        @GetUserInitials(context.User.Identity?.Name)
                    </div>
                    <div class="user-details">
                        <span class="user-name">@GetDisplayName(context.User.Identity?.Name)</span>
                        <span class="user-status">Online</span>
                    </div>
                    <svg class="dropdown-icon @(_showDropdown ? "rotated" : "")" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
                    </svg>
                </button>
                
                <div class="user-dropdown @(_showDropdown ? "show" : "")">
                    <div class="dropdown-header">
                        <div class="user-avatar large">
                            @GetUserInitials(context.User.Identity?.Name)
                        </div>
                        <div class="user-info">
                            <div class="user-name">@context.User.Identity?.Name</div>
                            <div class="user-email">@GetUserEmail(context.User)</div>
                        </div>
                    </div>
                    
                    <div class="dropdown-divider"></div>
                    
                    <a href="/profile" class="dropdown-item">
                        <svg viewBox="0 0 24 24">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                        </svg>
                        <span>Profile</span>
                    </a>
                    
                    <a href="/settings" class="dropdown-item">
                        <svg viewBox="0 0 24 24">
                            <path d="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.82,11.69,4.82,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/>
                        </svg>
                        <span>Settings</span>
                    </a>
                    
                    <a href="/help" class="dropdown-item">
                        <svg viewBox="0 0 24 24">
                            <path d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"/>
                        </svg>
                        <span>Help & Support</span>
                    </a>
                    
                    <div class="dropdown-divider"></div>
                    
                    <button class="dropdown-item logout-item" @onclick="Logout">
                        <svg viewBox="0 0 24 24">
                            <path d="M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z"/>
                        </svg>
                        <span>Logout</span>
                    </button>
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="auth-buttons">
                <a href="/login" class="btn btn-outline">Login</a>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private bool _showDropdown;

    private void ToggleUserDropdown()
    {
        _showDropdown = !_showDropdown;
    }

    private string GetUserInitials(string? name)
    {
        if (string.IsNullOrEmpty(name))
            return "U";

        var parts = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (parts.Length >= 2)
            return $"{parts[0][0]}{parts[1][0]}".ToUpper();
        
        return name[0].ToString().ToUpper();
    }

    private string GetDisplayName(string? name)
    {
        if (string.IsNullOrEmpty(name))
            return "User";

        var parts = name.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return parts.Length > 0 ? parts[0] : name;
    }

    private string GetUserEmail(ClaimsPrincipal user)
    {
        return user.FindFirst(ClaimTypes.Email)?.Value ?? 
               user.FindFirst("email")?.Value ?? string.Empty;
    }

    private async Task Logout()
    {
        _showDropdown = false;
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/", replace: true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Js.InvokeVoidAsync("addLoginDisplayListener", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void CloseDropdown()
    {
        _showDropdown = false;
        StateHasChanged();
    }

    public void Dispose()
    {
        // Clean up any event listeners if needed
    }
}

<style>
    .login-display {
        display: flex;
        align-items: center;
    }

    /* Auth Buttons for Not Authorized */
    .auth-buttons {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .btn {
        padding: 0.5rem 1.25rem;
        border-radius: 0.5rem;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.875rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: none;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        white-space: nowrap;
    }

    .btn-outline {
        color: #64748b;
        background-color: transparent;
        border: 1px solid #e2e8f0;
    }

    .btn-outline:hover {
        color: #3b82f6;
        border-color: #3b82f6;
        background-color: rgba(59, 130, 246, 0.05);
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(59, 130, 246, 0.1);
    }

    /* User Menu for Authorized */
    .user-menu {
        position: relative;
    }

    .user-button {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.5rem 1rem;
        background: rgba(255, 255, 255, 0.9);
        border: 1px solid #e2e8f0;
        border-radius: 0.75rem;
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        backdrop-filter: blur(10px);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .user-button:hover {
        background: rgba(255, 255, 255, 1);
        border-color: #3b82f6;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.15);
    }

    .user-avatar {
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.875rem;
        flex-shrink: 0;
    }

    .user-avatar.large {
        width: 2.5rem;
        height: 2.5rem;
        font-size: 1rem;
    }

    .user-details {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        min-width: 0;
    }

    .user-name {
        color: #1e293b;
        font-weight: 600;
        font-size: 0.875rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 120px;
    }

    .user-status {
        color: #10b981;
        font-size: 0.75rem;
        font-weight: 500;
    }

    .dropdown-icon {
        width: 1rem;
        height: 1rem;
        color: #64748b;
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        flex-shrink: 0;
        fill: currentColor;
    }

    .dropdown-icon.rotated {
        transform: rotate(180deg);
        color: #3b82f6;
    }

    /* User Dropdown */
    .user-dropdown {
        position: absolute;
        top: calc(100% + 0.5rem);
        right: 0;
        min-width: 280px;
        background: rgba(255, 255, 255, 0.98);
        backdrop-filter: blur(20px);
        border: 1px solid #e2e8f0;
        border-radius: 0.875rem;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        z-index: 1000;
        transform: translateY(-10px) scale(0.95);
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .user-dropdown.show {
        transform: translateY(0) scale(1);
        opacity: 1;
        visibility: visible;
    }

    .dropdown-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1.25rem 1.25rem 1rem;
    }

    .dropdown-header .user-info {
        flex: 1;
        min-width: 0;
    }

    .dropdown-header .user-name {
        color: #1e293b;
        font-weight: 600;
        font-size: 1rem;
        margin-bottom: 0.25rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .user-email {
        color: #64748b;
        font-size: 0.875rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .dropdown-divider {
        height: 1px;
        background: linear-gradient(90deg, transparent 0%, #e2e8f0 50%, transparent 100%);
        margin: 0.5rem 1.25rem;
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        width: 100%;
        padding: 0.75rem 1.25rem;
        color: #64748b;
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.2s ease;
        border: none;
        background: transparent;
        cursor: pointer;
        text-align: left;
    }

    .dropdown-item:hover {
        color: #3b82f6;
        background: rgba(59, 130, 246, 0.05);
    }

    .dropdown-item svg {
        width: 1.125rem;
        height: 1.125rem;
        flex-shrink: 0;
        fill: currentColor;
    }

    .logout-item {
        color: #dc2626;
        border-radius: 0 0 0.875rem 0.875rem;
    }

    .logout-item:hover {
        color: #dc2626;
        background: rgba(220, 38, 38, 0.05);
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .user-details {
            display: none;
        }

        .user-dropdown {
            min-width: 260px;
            right: -1rem;
        }

        .btn {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }

        .auth-buttons {
            gap: 0.5rem;
        }
    }

    @@media (max-width: 480px) {
        .user-dropdown {
            position: fixed;
            top: 4.5rem;
            right: 1rem;
            left: 1rem;
            min-width: auto;
        }

        .auth-buttons .btn:first-child {
            display: none;
        }
    }
</style>

<script>
    window.addLoginDisplayListener = (dotNetHelper) => {
        document.addEventListener('click', (event) => {
            const userMenu = document.querySelector('.user-menu');
            const dropdown = document.querySelector('.user-dropdown');
            
            if (userMenu && dropdown && dropdown.classList.contains('show') && 
                !userMenu.contains(event.target)) {
                dotNetHelper.invokeMethodAsync('CloseDropdown');
            }
        });
    };
</script>