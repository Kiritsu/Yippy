// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yippy.Emailing.Data;

#nullable disable

namespace Yippy.Emailing.Migrations
{
    [DbContext(typeof(EmailDbContext))]
    [Migration("20250806113843_MapToJsonColumn")]
    partial class MapToJsonColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yippy.Emailing.Data.QueuedEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("LastErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("LockId")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime?>("LockedUntilUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("NextRetryAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ProcessedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAtUtc")
                        .HasDatabaseName("ix_queued_emails_created_at");

                    b.HasIndex("Status")
                        .HasDatabaseName("ix_queued_emails_status");

                    b.HasIndex("UpdatedAtUtc")
                        .HasDatabaseName("ix_queued_emails_updated_at");

                    b.HasIndex("LockedUntilUtc", "LockId")
                        .HasDatabaseName("ix_queued_emails_lock");

                    b.HasIndex("Status", "NextRetryAtUtc")
                        .HasDatabaseName("ix_queued_emails_status_next_retry_at");

                    b.ToTable("QueuedEmails");
                });

            modelBuilder.Entity("Yippy.Emailing.Data.QueuedEmail", b =>
                {
                    b.OwnsMany("Yippy.Emailing.Data.EmailRecipient", "ToRecipients", b1 =>
                        {
                            b1.Property<Guid>("QueuedEmailId")
                                .HasColumnType("uuid");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "email");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "name");

                            b1.HasKey("QueuedEmailId", "__synthesizedOrdinal");

                            b1.ToTable("QueuedEmails");

                            b1.ToJson("ToRecipients");

                            b1.WithOwner()
                                .HasForeignKey("QueuedEmailId");
                        });

                    b.Navigation("ToRecipients");
                });
#pragma warning restore 612, 618
        }
    }
}
